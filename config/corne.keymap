/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE    0
#define NUM_SYM 1
#define NAV     2
#define NUMPAD  3

/ {
    behaviors {
        bd: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSP_DEL";
            #binding-cells = <0>;
            bindings = <&kp BKSP>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        shft_ins: shft_ins{
            compatible = "zmk,behavior-macro";
            label = "SHFT_INS";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LSHFT &kp INS>;
        };
        shft_ctrl_left: shft_ctrl_left{
            compatible = "zmk,behavior-macro";
            label = "SCL";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LCTRL>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LSHFT &kp LCTRL>
                ;
        };
        ctrl_left: ctrl_left{
            compatible = "zmk,behavior-macro";
            label = "CL";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LCTRL>
                ;
        };
        shft_ctrl_right: shft_ctrl_right{
            compatible = "zmk,behavior-macro";
            label = "SCR";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LCTRL>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LSHFT &kp LCTRL>
                ;
        };
        ctrl_right: ctrl_right{
            compatible = "zmk,behavior-macro";
            label = "CR";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LCTRL>
                ;
        };
    };
}
        
    keymap {
        compatible = "zmk,keymap";
        base_layer {
// ----------------------------------------------------------------------------------------
// | TAB         |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  -     |
// | GQT ESC/ALT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '     |
// | SHFT        |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |SHFT_INS|
//                  | GUI | CTRL | LT BKSP/NUM |   |LT SPC/NAV|MORPH BKSP/DEL|GQT ENT/SHFT|
            bindings = <
   &kp TAB        &kp Q &kp W &kp E &kp R &kp T       &kp Y &kp U &kp I     &kp O   &kp P    &kp MINUS
   &gqt LALT ESC  &kp A &kp S &kp D &kp F &kp G       &kp H &kp J &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT      &kp Z &kp X &kp C &kp V &kp B       &kp N &kp M &kp COMMA &kp DOT &kp FSLH &SHFT_INS
            &kp LGUI &kp LCTRL &lt NUM_SYM BKSP       &lt NAV SPACE &bd &gqt LSHFT RET
            >;
        };

        num_sym_layer {
// ------------------------------------------------------------------------------------------
// | ` |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  =  |
// |   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  +  |
// |   |     |     |     |  {  |  [  |   |  ]  |  }  |  \  |  |  |     |     |
//                 |     |     |     |   |     |     |     |
            bindings = <
   &kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp EQUAL
   &trans    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5         &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp PLUS
   &trans    &none    &none  &none    &kp LBRC &kp LBKT       &kp RBKT  &kp RBRC &kp BSLH &kp PIPE &trans &kp RIGHT
                                   &trans &trans &trans       &trans &trans &trans
            >;
        };

        nav_layer {
// -----------------------------------------------------------------------------------------
// | TAB | HOME |      |      | END  | INS |   | F1   | F2 | F3 | F4 | F5 |   F6   |
// |     | LFFT |  UP  | DOWN | RIGHT| APP |   | F7   | F8 | F9 | F10| F11|   F12  |
// |     | SCL  |  CL  |  CR  | SCR  |     |   |BT_CLR| BT0| BT1| BT2| BT3| NUM_PAD|
//                     |      |      |     |   |      |    |    |
            bindings = <
   &kp TAB &kp HOME &none   &none     &kp END   &kp INS     &kp F1 &kp F2  &kp F3 &kp F4 &kp F5  &kp F6
   &trans  &kp LEFT &kp UP  &kp DOWN  &kp RIGHT &kp K_APP   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &trans  &SCL     &CL     &CR       &SCR      &none       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &to NUMPAD
                              &trans    &trans    &trans      &trans     &trans     &trans
            >;
        };

        num_pad {
// -----------------------------------------------------------------------------------------
// | TAB |      | UP   |      |     |     |  | GQT (/) | N7 | N8 | N9 |  -  | BASE|
// |     | LEFT | DOWN | RIGHT|     |     |  |  *      | N4 | N5 | N6 |  +  |  =  |
// |     |      |      |      |     |     |  |  /      | N1 | N2 | N3 |  .  | RET |
//                     |      |     | BKSP|  | SPC  |    | N0 |
            bindings = <
   &kp TAB &none    &kp UP   &none     &none &none      &gqt RPAR LPAR    &kp N7 &kp N8 &kp N9 &kp MINUS &to BASE
   &trans  &kp LEFT &kp DOWN &kp RIGHT &none &none      &kp ASTRK         &kp N4 &kp N5 &kp N6 &kp PLUS  &kp EQUAL
   &trans  &none    &none    &none     &none &none      &kp FSLH          &kp N1 &kp N2 &kp N3 &kp DOT   &kp RET
                            &trans &trans &kp BKSP      &kp SPACE   &trans    &kp N0
            >;
        };
    };
};
